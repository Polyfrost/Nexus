datasource db {
	provider = "sqlite"
	url = "file:dev.db"
}

generator client {
	provider = "cargo prisma"
	output = "../../crates/prisma/src/prisma"
	module_path = "prisma"
	client_format = "folder"
}

/// @local(id: pub_id)
model Instance {
	id Int @id @default(autoincrement()) // This is NOT globally unique
	pub_id Bytes @unique // This UUID exists solely for backwards compatibility.

	node_id Bytes
	node_name String
	node_platform Int

	last_run DateTime
	date_created DateTime

	timestamp BigInt?

	@@map("instance")
}

model Statistics {
	id Int @id @default(autoincrement())
	date_captured DateTime @default(now())
	java_version String @default("0")
	operating_system Int @default(0)
}

/// @shared(id: pub_id)
model Object {
	id Int @id @default(autoincrement())
	pub_id Bytes @unique
	kind Int?

	date_created DateTime?
	date_accessed DateTime?

	@@map("object")
}

model Job {
	id Bytes @id

	name String?
	action String?

	status Int?

	errors_text String?

	data Bytes?
	metadata Bytes?

	parent_id Bytes?

	task_count Int?
	completed_task_count Int?
	estimated_completion DateTime?

	date_created DateTime?
	date_started DateTime?
	date_completed DateTime?

	parent Job? @relation("jobs_dependency", fields: [parent_id], references: [id], onDelete: SetNull)
	children Job[] @relation("jobs_dependency")

	@@map("job")
}

/// @shared(id: key)
model Preference {
	key String @id
	value Bytes?

	@@map("preference")
}

model Notification {
	id Int @id @default(autoincrement())
	read Boolean @default(false)

	data Bytes
	expires_at DateTime?

	@@map("notification")
}
